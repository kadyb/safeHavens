% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EqualAreaSample.R
\name{EqualAreaSample}
\alias{EqualAreaSample}
\title{Create equal area polygons over a geographic range}
\usage{
EqualAreaSample(x, n, pts, planar_projection, returnProjected, reps, BS.reps)
}
\arguments{
\item{x}{An SF object or terra spatraster. the range over which to generate the clusters.}

\item{n}{Numeric. the number of clusters desired. Defaults to 20.}

\item{pts}{Numeric. the number of points to use for generating the clusters, these will be placed in a grid like fashion across \code{x}. The exact number of points used may deviate slightly from the user submitted value to allow for equidistant spacing across \code{x}. Defaults to 5,000.}

\item{planar_projection}{Numeric, or character vector. An EPSG code, or a proj4 string, for a planar coordinate projection, in meters, for use with the function. For species with very narrow ranges a UTM zone may be best (e.g. 32611 for WGS84 zone 11 north, or 29611 for NAD83 zone 11 north). Otherwise a continental scale projection like 5070 See https://projectionwizard.org/ for more information on CRS. The value is simply passed to sf::st_transform if you need to experiment.}

\item{reps}{Numeric. The number of times to rerun the voronoi algorithm, the set of polygons with the most similar sizes, as
measured using their variance of areas will be selected. Defaults to 100.}

\item{BS.reps}{number of bootstrap replicates for evaluating results.}

\item{returnProjected.}{Boolean. Whether to return the data set in the original input CRS (FALSE), or in the new \code{projection} (TRUE). Defaults to FALSE.}
}
\value{
A list containing two objects, the first the results of bootstrap simulations.
The second an sf dataframe containing the polygons with the smallest amount of variance in size.
}
\description{
This function creates \code{n} geographic clusters over a geographic area (\code{x}), typically a species
range, using kmeans clustering.
}
\examples{
\donttest{
nc <- sf::st_read(system.file("shape/nc.shp", package="sf")) |>
dplyr::select(NAME)

set.seed(1)
system.time(
  zones <- EqualAreaSample(nc, n = 20, pts = 1000, planar_projection = 32617, reps = 100)
)

plot(nc, main = 'Counties of North Carolina')
plot(zones, main = 'Clusters')
}
}
